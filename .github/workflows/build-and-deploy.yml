# Tên của Workflow, sẽ hiển thị trên tab "Actions" của GitHub
name: Optimized LaTeX Code & PDF Viewer Deployment

# Cấu hình khi nào Workflow này sẽ chạy
on:
  push:
    branches: [ main ] # Kích hoạt khi có commit được push lên branch 'main'
  workflow_dispatch: # Cho phép bạn chạy Workflow này thủ công từ GitHub UI

# Cấu hình quyền hạn cần thiết cho Workflow
permissions:
  contents: read      # Cần để checkout mã nguồn của repository
  pages: write        # Cần để upload và triển khai nội dung lên GitHub Pages
  id-token: write     # Cần cho OpenID Connect (OIDC) để xác thực an toàn với GitHub Pages

# Định nghĩa các công việc (Jobs) trong Workflow
jobs:
  # Job đầu tiên: Biên dịch tài liệu và tạo các artifacts
  build-documents:
    runs-on: ubuntu-latest # Chạy job này trên một máy ảo Ubuntu mới nhất

    steps:
      - name: Checkout repository # Bước: Kéo mã nguồn của repository về máy ảo runner
        uses: actions/checkout@v4 # Sử dụng action 'checkout' phiên bản 4

      - name: Create output directory for Pages # Bước: Tạo thư mục đầu ra chính
        run: mkdir -p output/html # Thư mục này sẽ chứa tất cả file cho GitHub Pages

      # BƯỚC DUY NHẤT VÀ TỐI ƯU HÓA: Biên dịch LaTeX, cài đặt tex4ht, và chuyển đổi sang HTML
      # Tất cả công việc liên quan đến TeX/LaTeX/HTML sẽ được thực hiện trong một môi trường duy nhất.
      - name: Compile LaTeX, Install tex4ht, and Generate HTML
        uses: xu-cheng/latex-action@v2 # Sử dụng action 'latex-action' phiên bản 2
        with:
          root_file: main.tex # Tên file LaTeX gốc của bạn (phải nằm ở thư mục gốc của repo)
          compiler: pdflatex # Chỉ định trình biên dịch LaTeX là pdflatex
          # Quan trọng: Đảm bảo PDF xuất ra đúng thư mục sẽ được GitHub Pages sử dụng
          args: '-outdir=output/html' # Biên dịch PDF trực tiếp vào thư mục output/html
          # Cài đặt gói 'tex4ht' (chứa make4ht) ngay trong môi trường của action này
          extra_packages: tex4ht

          # Chạy các lệnh sau khi biên dịch PDF xong, trong CÙNG môi trường Docker
          post_compile: |
            echo "Running make4ht to convert LaTeX to HTML..."
            # make4ht sẽ tạo main.html, main.css, và các file phụ khác trong output/html
            make4ht -d output/html main.tex "html"

            # Đổi tên main.html thành index.html để nó là trang mặc định của GitHub Pages
            mv output/html/main.html output/html/index.html

            # Copy file LaTeX gốc vào thư mục output/html để có thể hiển thị trong viewer
            cp main.tex output/html/main.tex

            echo "Checking output files in output/html/:"
            ls -l output/html/ # Liệt kê nội dung thư mục để kiểm tra (debug)

            # Kiểm tra xem các file quan trọng có được tạo ra không
            if [ ! -f output/html/main.pdf ]; then
              echo "Lỗi: main.pdf không được tạo ra thành công."
              exit 1
            fi
            if [ ! -f output/html/index.html ]; then
              echo "Lỗi: index.html không được tạo ra hoặc đổi tên thành công bởi make4ht."
              exit 1
            fi
            if [ ! -f output/html/main.tex ]; then
              echo "Lỗi: main.tex không được copy thành công vào thư mục đầu ra."
              exit 1
            fi
            echo "All required output files successfully created."

      # Bước: Upload file PDF đã biên dịch làm Artifact (để tải về từ Actions)
      # Lưu ý: PDF hiện cũng nằm trong output/html
      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: compiled-pdf # Tên của artifact (sẽ hiển thị trên GitHub Actions)
          path: output/html/main.pdf # Đường dẫn đến file PDF đã biên dịch

      # Bước: Upload tất cả các file cho GitHub Pages (HTML, CSS, PDF, TEX)
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: output/html # Toàn bộ thư mục output/html sẽ được upload

  # Job phụ trợ để cấu hình GitHub Pages (đảm bảo cấu hình một lần)
  setup-pages:
    runs-on: ubuntu-latest
    needs: build-documents # Job này cần job build-documents chạy xong để có artifacts

    steps:
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4 # Action để cấu hình Pages, thường chạy một lần

  # Job cuối cùng: Triển khai các file đã tạo lên GitHub Pages
  deploy-pages:
    environment:
      name: github-pages # Chỉ định môi trường triển khai là 'github-pages'
      url: ${{ steps.deployment.outputs.page_url }} # Lấy URL của trang đã triển khai
    runs-on: ubuntu-latest
    needs: [build-documents, setup-pages] # Job này phụ thuộc vào cả hai job trước đó

    steps:
      - name: Deploy to GitHub Pages # Bước: Triển khai nội dung lên GitHub Pages
        id: deployment # Đặt ID cho bước này để có thể tham chiếu URL sau
        uses: actions/deploy-pages@v4 # Action để triển khai lên GitHub Pages
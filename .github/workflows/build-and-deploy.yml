# Tên của Workflow, sẽ hiển thị trên tab "Actions" của GitHub
name: Compile LaTeX to PDF & HTML, then Deploy to GitHub Pages

# Cấu hình khi nào Workflow này sẽ chạy
on:
  push:
    branches: [ main ] # Kích hoạt khi có commit được push lên branch 'main'
                       # Đảm bảo 'main' là tên branch chính của bạn (có thể là 'master')
  workflow_dispatch: # Cho phép bạn chạy Workflow này thủ công từ GitHub UI

# Cấu hình quyền hạn cần thiết cho Workflow
permissions:
  contents: read      # Cần để checkout mã nguồn của repository
  pages: write        # Cần để upload và triển khai nội dung lên GitHub Pages
  id-token: write     # Cần cho OpenID Connect (OIDC) để xác thực an toàn với GitHub Pages

# Định nghĩa các công việc (Jobs) trong Workflow
jobs:
  # Job đầu tiên: Biên dịch tài liệu và tạo các artifacts
  build-documents:
    runs-on: ubuntu-latest # Chạy job này trên một máy ảo Ubuntu mới nhất

    steps:
      - name: Checkout repository # Bước: Kéo mã nguồn của repository về máy ảo runner
        uses: actions/checkout@v4 # Sử dụng action 'checkout' phiên bản 4

      - name: Create output directories # Bước: Tạo các thư mục đầu ra
        run: |
          mkdir -p output/pdf # Thư mục để chứa file PDF đã biên dịch
          mkdir -p output/html # Thư mục để chứa các file HTML đã chuyển đổi (cho GitHub Pages)
          # 'mkdir -p' sẽ tạo thư mục nếu nó chưa tồn tại, hoặc không làm gì nếu đã tồn tại

      # Bước 1: Biên dịch LaTeX sang PDF bằng pdflatex
      # Vẫn dùng xu-cheng/latex-action@v2 vì nó tối ưu cho việc biên dịch PDF nhanh chóng.
      - name: Compile LaTeX to PDF with pdflatex
        uses: xu-cheng/latex-action@v2 # Sử dụng action 'latex-action' phiên bản 2
        with:
          root_file: main.tex # Tên file LaTeX gốc của bạn (phải nằm ở thư mục gốc của repo)
          compiler: pdflatex # Chỉ định trình biên dịch LaTeX là pdflatex
          args: '-outdir=output/pdf' # Truyền tùy chọn cho latexmk/compiler để xuất PDF vào thư mục output/pdf

      # BƯỚC MỚI VÀ QUAN TRỌNG: Thiết lập TeX Live và cài đặt tex4ht cho make4ht
      # Action này sẽ cài đặt TeX Live một cách đầy đủ hơn trên runner, đảm bảo make4ht có sẵn trong PATH.
      - name: Setup TeX Live with tex4ht
        uses: dante-editor/setup-texlive@latest # Sử dụng action setup-texlive chuyên dụng
        with:
          profile: minimal # Bắt đầu với profile minimal để cài đặt nhanh nhất
          packages: tex4ht # Cài đặt cụ thể gói 'tex4ht' (chứa make4ht) thông qua tlmgr

      # Bước 3: Chuyển đổi LaTeX sang HTML bằng make4ht
      # Bây giờ, make4ht sẽ có sẵn trong PATH và lệnh này sẽ chạy thành công.
      - name: Convert LaTeX to HTML with make4ht
        run: |
          make4ht -d output/html main.tex "html" # Chạy make4ht để tạo HTML trong output/html
          mv output/html/main.html output/html/index.html # Đổi tên thành index.html để làm trang mặc định
          ls -l output/html/ # Liệt kê nội dung thư mục để kiểm tra (debug)
          if [ ! -f output/html/index.html ]; then
            echo "Lỗi: index.html không được tạo ra hoặc đổi tên thành công bởi make4ht."
            exit 1 # Thoát job nếu file không tồn tại
          fi

      # Bước 4: Upload file PDF đã biên dịch làm Artifact
      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: compiled-pdf
          path: output/pdf/main.pdf # Đường dẫn đến file PDF đã biên dịch

      # Bước 5: Upload các file HTML làm Artifact cho GitHub Pages
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: output/html # Đường dẫn đến thư mục chứa tất cả các file HTML và tài nguyên liên quan

  # Job phụ trợ để cấu hình GitHub Pages (đảm bảo cấu hình một lần)
  setup-pages:
    runs-on: ubuntu-latest
    needs: build-documents # Job này cần job build-documents chạy xong để có artifacts

    steps:
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4 # Action để cấu hình Pages, thường chạy một lần

  # Job cuối cùng: Triển khai các file đã tạo lên GitHub Pages
  deploy-pages:
    environment:
      name: github-pages # Chỉ định môi trường triển khai là 'github-pages'
      url: ${{ steps.deployment.outputs.page_url }} # Lấy URL của trang đã triển khai
    runs-on: ubuntu-latest
    needs: [build-documents, setup-pages] # Job này phụ thuộc vào cả hai job trước đó

    steps:
      - name: Deploy to GitHub Pages 
        id: deployment # Đặt ID cho bước này để có thể tham chiếu URL sau
        uses: actions/deploy-pages@v4 # Action để triển khai lên GitHub Pages